//*
// LogStore Client

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: logstore.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Represents all the possible status.
type Status int32

const (
	// Operation was successful
	Status_OK Status = 0
	// The entry was not found
	Status_ENTRY_NOT_FOUND Status = 1
	// The existing version does not match the expected version
	Status_UNEXPECTED_VERSION_ID Status = 2
	// The session that the put request referred to is not alive
	Status_SESSION_DOES_NOT_EXIST Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ENTRY_NOT_FOUND",
		2: "UNEXPECTED_VERSION_ID",
		3: "SESSION_DOES_NOT_EXIST",
	}
	Status_value = map[string]int32{
		"OK":                     0,
		"ENTRY_NOT_FOUND":        1,
		"UNEXPECTED_VERSION_ID":  2,
		"SESSION_DOES_NOT_EXIST": 3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_logstore_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_logstore_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{0}
}

type AddEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntryRequest) Reset() {
	*x = AddEntryRequest{}
	mi := &file_logstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntryRequest) ProtoMessage() {}

func (x *AddEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntryRequest.ProtoReflect.Descriptor instead.
func (*AddEntryRequest) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{0}
}

func (x *AddEntryRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type AddEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=woodpecker.proto.logstore.Status" json:"status,omitempty"`
	SegId         *int64                 `protobuf:"varint,2,opt,name=segId,proto3,oneof" json:"segId,omitempty"`
	EntryId       *int64                 `protobuf:"varint,3,opt,name=entryId,proto3,oneof" json:"entryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEntryResponse) Reset() {
	*x = AddEntryResponse{}
	mi := &file_logstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntryResponse) ProtoMessage() {}

func (x *AddEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntryResponse.ProtoReflect.Descriptor instead.
func (*AddEntryResponse) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{1}
}

func (x *AddEntryResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *AddEntryResponse) GetSegId() int64 {
	if x != nil && x.SegId != nil {
		return *x.SegId
	}
	return 0
}

func (x *AddEntryResponse) GetEntryId() int64 {
	if x != nil && x.EntryId != nil {
		return *x.EntryId
	}
	return 0
}

type ReadEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegId         int64                  `protobuf:"varint,1,opt,name=segId,proto3" json:"segId,omitempty"`
	EntryId       int64                  `protobuf:"varint,2,opt,name=entryId,proto3" json:"entryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadEntryRequest) Reset() {
	*x = ReadEntryRequest{}
	mi := &file_logstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEntryRequest) ProtoMessage() {}

func (x *ReadEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEntryRequest.ProtoReflect.Descriptor instead.
func (*ReadEntryRequest) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{2}
}

func (x *ReadEntryRequest) GetSegId() int64 {
	if x != nil {
		return x.SegId
	}
	return 0
}

func (x *ReadEntryRequest) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type ReadEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=woodpecker.proto.logstore.Status" json:"status,omitempty"`
	Entry         *LogEntry              `protobuf:"bytes,2,opt,name=entry,proto3,oneof" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadEntryResponse) Reset() {
	*x = ReadEntryResponse{}
	mi := &file_logstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEntryResponse) ProtoMessage() {}

func (x *ReadEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEntryResponse.ProtoReflect.Descriptor instead.
func (*ReadEntryResponse) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{3}
}

func (x *ReadEntryResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ReadEntryResponse) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegId         int64                  `protobuf:"varint,1,opt,name=segId,proto3" json:"segId,omitempty"`
	EntryId       int64                  `protobuf:"varint,2,opt,name=entryId,proto3" json:"entryId,omitempty"`
	Values        []byte                 `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_logstore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetSegId() int64 {
	if x != nil {
		return x.SegId
	}
	return 0
}

func (x *LogEntry) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *LogEntry) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type LogMessageIdData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegId         int64                  `protobuf:"varint,1,opt,name=segId,proto3" json:"segId,omitempty"`
	EntryId       int64                  `protobuf:"varint,2,opt,name=entryId,proto3" json:"entryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogMessageIdData) Reset() {
	*x = LogMessageIdData{}
	mi := &file_logstore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogMessageIdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessageIdData) ProtoMessage() {}

func (x *LogMessageIdData) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessageIdData.ProtoReflect.Descriptor instead.
func (*LogMessageIdData) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{5}
}

func (x *LogMessageIdData) GetSegId() int64 {
	if x != nil {
		return x.SegId
	}
	return 0
}

func (x *LogMessageIdData) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type LogMessageLayout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogMessageLayout) Reset() {
	*x = LogMessageLayout{}
	mi := &file_logstore_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogMessageLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessageLayout) ProtoMessage() {}

func (x *LogMessageLayout) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessageLayout.ProtoReflect.Descriptor instead.
func (*LogMessageLayout) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{6}
}

func (x *LogMessageLayout) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LogMessageLayout) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type LastReadState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentId     int64                  `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	Flags         uint32                 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	Version       uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	LastBlockId   int32                  `protobuf:"varint,4,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	BlockOffset   int64                  `protobuf:"varint,5,opt,name=block_offset,json=blockOffset,proto3" json:"block_offset,omitempty"`
	BlockSize     uint32                 `protobuf:"varint,6,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LastReadState) Reset() {
	*x = LastReadState{}
	mi := &file_logstore_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastReadState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastReadState) ProtoMessage() {}

func (x *LastReadState) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastReadState.ProtoReflect.Descriptor instead.
func (*LastReadState) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{7}
}

func (x *LastReadState) GetSegmentId() int64 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

func (x *LastReadState) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *LastReadState) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LastReadState) GetLastBlockId() int32 {
	if x != nil {
		return x.LastBlockId
	}
	return 0
}

func (x *LastReadState) GetBlockOffset() int64 {
	if x != nil {
		return x.BlockOffset
	}
	return 0
}

func (x *LastReadState) GetBlockSize() uint32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

type BatchReadResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*LogEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	LastReadState *LastReadState         `protobuf:"bytes,2,opt,name=lastReadState,proto3" json:"lastReadState,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchReadResult) Reset() {
	*x = BatchReadResult{}
	mi := &file_logstore_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReadResult) ProtoMessage() {}

func (x *BatchReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_logstore_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReadResult.ProtoReflect.Descriptor instead.
func (*BatchReadResult) Descriptor() ([]byte, []int) {
	return file_logstore_proto_rawDescGZIP(), []int{8}
}

func (x *BatchReadResult) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchReadResult) GetLastReadState() *LastReadState {
	if x != nil {
		return x.LastReadState
	}
	return nil
}

var File_logstore_proto protoreflect.FileDescriptor

var file_logstore_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x77, 0x6f, 0x6f, 0x64,
	0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x65, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x73, 0x65, 0x67, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x67, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x52, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x65, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x65, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x65, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x67, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x10,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x5b, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa0, 0x01,
	0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x4e, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2a, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f,
	0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x03, 0x32, 0xd7,
	0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x2e,
	0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x6f, 0x6f,
	0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f,
	0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x6c, 0x6c, 0x69, 0x7a, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x77, 0x6f, 0x6f, 0x64, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logstore_proto_rawDescOnce sync.Once
	file_logstore_proto_rawDescData = file_logstore_proto_rawDesc
)

func file_logstore_proto_rawDescGZIP() []byte {
	file_logstore_proto_rawDescOnce.Do(func() {
		file_logstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_logstore_proto_rawDescData)
	})
	return file_logstore_proto_rawDescData
}

var file_logstore_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logstore_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_logstore_proto_goTypes = []any{
	(Status)(0),               // 0: woodpecker.proto.logstore.Status
	(*AddEntryRequest)(nil),   // 1: woodpecker.proto.logstore.AddEntryRequest
	(*AddEntryResponse)(nil),  // 2: woodpecker.proto.logstore.AddEntryResponse
	(*ReadEntryRequest)(nil),  // 3: woodpecker.proto.logstore.ReadEntryRequest
	(*ReadEntryResponse)(nil), // 4: woodpecker.proto.logstore.ReadEntryResponse
	(*LogEntry)(nil),          // 5: woodpecker.proto.logstore.LogEntry
	(*LogMessageIdData)(nil),  // 6: woodpecker.proto.logstore.LogMessageIdData
	(*LogMessageLayout)(nil),  // 7: woodpecker.proto.logstore.LogMessageLayout
	(*LastReadState)(nil),     // 8: woodpecker.proto.logstore.LastReadState
	(*BatchReadResult)(nil),   // 9: woodpecker.proto.logstore.BatchReadResult
	nil,                       // 10: woodpecker.proto.logstore.LogMessageLayout.PropertiesEntry
}
var file_logstore_proto_depIdxs = []int32{
	0,  // 0: woodpecker.proto.logstore.AddEntryResponse.status:type_name -> woodpecker.proto.logstore.Status
	0,  // 1: woodpecker.proto.logstore.ReadEntryResponse.status:type_name -> woodpecker.proto.logstore.Status
	5,  // 2: woodpecker.proto.logstore.ReadEntryResponse.entry:type_name -> woodpecker.proto.logstore.LogEntry
	10, // 3: woodpecker.proto.logstore.LogMessageLayout.properties:type_name -> woodpecker.proto.logstore.LogMessageLayout.PropertiesEntry
	5,  // 4: woodpecker.proto.logstore.BatchReadResult.entries:type_name -> woodpecker.proto.logstore.LogEntry
	8,  // 5: woodpecker.proto.logstore.BatchReadResult.lastReadState:type_name -> woodpecker.proto.logstore.LastReadState
	1,  // 6: woodpecker.proto.logstore.LogStore.AddEntry:input_type -> woodpecker.proto.logstore.AddEntryRequest
	3,  // 7: woodpecker.proto.logstore.LogStore.ReadEntry:input_type -> woodpecker.proto.logstore.ReadEntryRequest
	2,  // 8: woodpecker.proto.logstore.LogStore.AddEntry:output_type -> woodpecker.proto.logstore.AddEntryResponse
	4,  // 9: woodpecker.proto.logstore.LogStore.ReadEntry:output_type -> woodpecker.proto.logstore.ReadEntryResponse
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_logstore_proto_init() }
func file_logstore_proto_init() {
	if File_logstore_proto != nil {
		return
	}
	file_logstore_proto_msgTypes[1].OneofWrappers = []any{}
	file_logstore_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logstore_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logstore_proto_goTypes,
		DependencyIndexes: file_logstore_proto_depIdxs,
		EnumInfos:         file_logstore_proto_enumTypes,
		MessageInfos:      file_logstore_proto_msgTypes,
	}.Build()
	File_logstore_proto = out.File
	file_logstore_proto_rawDesc = nil
	file_logstore_proto_goTypes = nil
	file_logstore_proto_depIdxs = nil
}
